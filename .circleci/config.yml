version: 2.1

commands:
  deploy:
    description: Deployment of int-server
    parameters:
      hostname:
        type: string
        default: "int-staging.avniproject.org"
      env:
        type: string
        default: "staging"
    steps:
      - attach_workspace:
          at: ~/artifacts

      - run: sudo apt-get install make openssl

      - run:
          name: Install dependencies
          command: |
            sudo apt-get -y -qq update
            sudo apt-get -y -qq install python3-pip
            sudo pip3 install awscli --upgrade
            sudo pip3 install ansible

      - run: curl -L https://github.com/avniproject/avni-infra/archive/master.zip >> ~/infra.zip

      - run: |
          cd ~/
          unzip infra.zip
          mv avni-infra-master avni-infra
          rm -rf infra.zip

      - run: echo $ANSIBLE_VAULT_PASS > ~/.vault-pass.txt

      - run: |
          pwd
          cd ~/avni-infra/configure
          mv ~/artifacts/avni-int.jar ~/artifacts/integrator-0.0.2-SNAPSHOT.jar
          VAULT_PASSWORD_FILE=~/.vault-pass.txt app_zip_path=~/artifacts/ make deploy-int-server-<< parameters.env >>

      - run: rm ~/.vault-pass.txt

jobs:
  test:
    docker:
      - image: cimg/openjdk:17.0.5

      - image: cimg/postgres:12.7
        environment:
          - POSTGRES_USER: circleci
          - POSTGRES_DB: avni_int_test
          - POSTGRES_PASSWORD: password

    working_directory: ~/avni-int

    environment:
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - run: sudo apt-get update

      - run: sudo apt-get install make postgresql-client

      - run: wget -qO- https://repo1.maven.org/maven2/org/flywaydb/flyway-commandline/8.5.9/flyway-commandline-8.5.9-linux-x64.tar.gz | tar xvz && sudo ln -s `pwd`/flyway-8.5.9/flyway /usr/local/bin

      - run: |
          cd ~/avni-int
          make rebuild-db-schema
          make test-server

      - store_artifacts:
          path: ~/avni-int/amrit/build/reports/tests/test
          destination: testReports/amrit

      - store_artifacts:
          path: ~/avni-int/avni/build/reports/tests/test
          destination: testReports/avni

      - store_artifacts:
          path: ~/avni-int/bahmni/build/reports/tests/test
          destination: testReports/bahmni

      - store_artifacts:
          path: ~/avni-int/goonj/build/reports/tests/test
          destination: testReports/goonj

      - store_artifacts:
          path: ~/avni-int/integration-data/build/reports/tests/test
          destination: testReports/integration-data

      - store_artifacts:
          path: ~/avni-int/integrator/build/reports/tests/test
          destination: testReports/integrator

      - store_artifacts:
          path: ~/avni-int/metadata-migrator/build/reports/tests/test
          destination: testReports/metadata-migrator

      - store_artifacts:
          path: ~/avni-int/power/build/reports/tests/test
          destination: testReports/power

      - store_artifacts:
          path: ~/avni-int/util/build/reports/tests/test
          destination: testReports/util

  build:
    docker:
      - image: cimg/openjdk:17.0.5

    working_directory: ~/avni-int

    environment:
      - ANSIBLE_HOST_KEY_CHECKING: False
      - ANSIBLE_LOCAL_TEMP: /home/circleci/.ansible/tmp
      - ANSIBLE_REMOTE_TEMP: /home/circleci/.ansible/tmp
      - MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - run: sudo apt-get install make openssl

      - run: make build-server

      - run: mkdir -p ~/artifacts;

      - run: cp ~/avni-int/integrator/build/libs/integrator-0.0.2-SNAPSHOT.jar ~/artifacts/avni-int.jar;

      - persist_to_workspace:
          root: ~/artifacts
          paths:
            - avni-int.jar

      - store_artifacts:
          path: ~/artifacts

  STAGING_deploy:
    docker:
      - image: circleci/openjdk:11-jdk
        environment:
          ANSIBLE_HOST_KEY_CHECKING: no
    working_directory: ~/
    steps:
      - deploy:
          hostname: "int-staging.avniproject.org"
          env: "staging"

  PRODUCTION_deploy:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/
    steps:
      - deploy:
          hostname: "int-prod.avniproject.org"
          env: "prod"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - STAGING_approve:
          type: approval
          requires:
            - build
      - STAGING_deploy:
          context: non-prod-deploy
          filters:
            branches:
              only: main
          requires:
            - STAGING_approve
      - PRODUCTION_approve:
          type: approval
          requires:
            - build
      - PRODUCTION_deploy:
          context: prod-deploy
          requires:
            - PRODUCTION_approve
